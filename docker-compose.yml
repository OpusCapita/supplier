version: '3'
services:
  main:
    depends_on:
      - mysql
      - consul
      - registrator
      - isodata
      - nginx
    labels:
      SERVICE_NAME: 'supplier'  # Service name used by Registrator for adding to Consul's service discovery registry.
      SERVICE_TAGS: 'external,kong'
    environment:
      SERVICE_3001_CHECK_HTTP: /api/health/check
      SERVICE_3001_CHECK_INTERVAL: 15s
      SERVICE_3001_CHECK_TIMEOUT: 3s
      NODE_ENV: $NODE_ENV
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_AUTH: ${REDIS_AUTH}
    ports:
      - '3001:3001'

  mysql:
    image: 'mysql:5.6'
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    depends_on:
      - registrator

  isodata:
    image: opuscapita/isodata:dev
#    build: '../isodata'
#    volumes:
#      - ../isodata:/home/node/isodata
    depends_on:
      - mysql
      - consul
      - registrator
      - nginx
    ports:
      - '3006:3006'
    labels:
      SERVICE_NAME: isodata
      SERVICE_TAGS: 'external,kong'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      PORT: '3006'
    command: 'npm run dev:production'

  user:
    image: opuscapita/user:dev
    depends_on:
      - mysql
      - consul
      - registrator
      - redis
      - nginx
    labels:
      SERVICE_NAME: 'user'
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      REDIS_AUTH: $REDIS_AUTH
    ports:
      - '3008:3008'
    command: 'npm run dev'

  acl:
    image: opuscapita/acl:dev
    labels:
      - 'SERVICE_NAME=acl'
      - 'SERVICE_TAGS=external,kong'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      SERVICE_3013_CHECK_HTTP: /api/health/check
      SERVICE_3013_CHECK_INTERVAL: 15s
      SERVICE_3013_CHECK_TIMEOUT: 3s
    ports:
     - '3013:3013'
    depends_on:
      - consul
    command: 'npm run dev'

  redis:
    image: opuscapita/redis:dev
    ports:
      - '6379:6379'
    environment:
      REDIS_AUTH: ${REDIS_AUTH}
    depends_on:
      - registrator

  nginx:
    image: opuscapita/nginx-rp:dev
    ports:
      - '8080:8080'
    depends_on:
      - consul

  registrator:
    image: gliderlabs/registrator
    command: consul://consul:8500
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - consul

  consul:
    image: consul:latest
    ports:
      - '8400:8400'
      - '8500:8500'
      - '8600:53/udp'
    labels:
      SERVICE_IGNORE: 'true'  # Do not add any of Consul's services to Consul's service discovery registry.
    command: [agent, '-server', '-ui', '-bootstrap', '-client=0.0.0.0']
